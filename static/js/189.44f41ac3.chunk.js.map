{"version":3,"file":"static/js/189.44f41ac3.chunk.js","mappings":"sIA4BMA,EAAgB,SAACC,EAAOC,GAC3B,OAA0BC,EAAAA,EAAAA,WAAS,GAAK,eAAnCC,EAAO,KAAEC,EAAQ,KACtB,GAA0CF,EAAAA,EAAAA,WAAS,GAAM,eAApDG,EAAc,KAAEC,EAAiB,KACtC,GAAkCJ,EAAAA,EAAAA,WAAS,GAAM,eAA5CK,EAAU,KAAEC,EAAa,KAC9B,GAAwBN,EAAAA,EAAAA,UAAS,IAAG,eAA/BO,EAAK,KAAEC,EAAQ,KACpB,GAAkCR,EAAAA,EAAAA,WAAS,GAAM,eAA5CS,EAAU,KAAEC,EAAa,KAoC9B,OAnCAC,EAAAA,EAAAA,YAAU,WACP,IAAK,IAAMC,KAAcb,EACtB,OAAQa,GACL,IAAK,YACFd,EAAMe,OAASd,EAAYa,GAAcR,GAAkB,GAAQA,GAAkB,GACrF,MACH,IAAK,UACMF,GAARJ,GACA,MACH,IAAK,UACFQ,GAzCLQ,OAyCkChB,GAxCrCiB,cACAC,MACE,0JA4CN,GAAG,CAAClB,EAAOC,KACXY,EAAAA,EAAAA,YAAU,WAEJH,EADCP,EACQ,+HACDI,EACC,oGACDF,EACC,2GAAwBJ,EAAYkB,UAEpC,IAITP,IADCT,GAAWE,GAAkBE,GAKpC,GAAG,CAACJ,EAASE,EAAgBE,EAAYN,KACzCY,EAAAA,EAAAA,YAAU,WAAO,GAAG,IACb,CACJJ,MAAAA,EACAE,WAAAA,EAEN,EACA,IAjEiB,SAACS,EAAcnB,GAC7B,OAAwBC,EAAAA,EAAAA,UAASkB,GAAa,eAAzCpB,EAAK,KAAEqB,EAAQ,KACpB,GAA0BnB,EAAAA,EAAAA,WAAS,GAAM,eAApCoB,EAAO,KAAEC,EAAQ,KAEhBC,EAAQzB,EAAcC,EAAOC,GAOnC,OAAO,QACJD,MAAAA,EACAsB,QAAAA,EACAG,SATc,SAACC,GACfL,EAASK,EAAEC,OAAO3B,MACrB,EAQG4B,OAPY,SAACF,GACbH,GAAS,EACZ,GAMMC,EAET,C,sGC1BA,GAAgB,KAAO,sBAAsB,SAAW,0BAA0B,SAAW,0BAA0B,IAAM,qBAAqB,MAAQ,wBCA1J,GAAgB,KAAO,mBAAmB,MAAQ,oBAAoB,YAAc,0BAA0B,SAAW,wB,SCCnHK,EAAO,SAACC,GACX,OACG,iBAAKC,UAAWC,EAAAA,KAAO,WACpB,gBAAKD,UAAWC,EAAAA,MAAQ,UACrB,gBAAKC,IAAKH,EAAMI,KAAKC,MAAOC,IAAI,YAEnC,gBAAKL,UAAWC,EAAAA,YAAc,UAC3B,uBAAIF,EAAMI,KAAKG,aAElB,gBAAKN,UAAWC,EAAAA,WAAa,UAC1B,mBACGM,QAAS,WACNR,EAAMI,KAAKK,MAAQT,EAAMU,mBAAmBV,EAAMI,KAAKO,IAAMX,EAAMY,mBAAmBZ,EAAMI,KAAKO,GACpG,EAAE,SACDX,EAAMI,KAAKS,gBAGlB,gBAAKZ,UAAWC,EAAAA,SAAW,UACxB,yBAAMF,EAAMI,KAAKU,aAEnBd,EAAMe,cACJ,mBACGP,QAAS,WACNR,EAAMgB,WAAWhB,EAAMI,KAAKO,GAC/B,EAAE,sBAMjB,EACA,EAAeM,EAAAA,KAAWlB,G,mBCG1B,EAlCuB,SAACC,GACrB,OAA8B5B,EAAAA,EAAAA,WAAS,GAAM,eAAxC8C,EAAQ,KAAEC,EAAW,KAC1B,GAA0B/C,EAAAA,EAAAA,UAAS4B,EAAMoB,QAAO,eAA3CA,EAAM,KAAEC,EAAS,KAYtB,OACG,8BACKH,GAKC,0BACG,kBACGI,WAAW,EACXxB,OAjBU,WACtBqB,GAAY,GACZnB,EAAMuB,iBAAiBH,EAC1B,EAeezB,SAdM,SAACC,GACnByB,EAAUzB,EAAE4B,cAActD,MAC7B,EAaeuD,KAAK,OACLC,aAAcN,OAVpB,0BACG,iBAAMO,cAdK,WAChB3B,EAAMe,aAAaI,GAAY,EACtC,EAYkD,SAAEC,GAAU,oBAejE,E,UCVA,EAvBqB,SAACpB,GACnB,IAAM4B,GAAcC,EAAAA,EAAAA,GAAS,GAAI,CAAExD,SAAS,EAAMgB,UAAW,IAC7D,OAAKW,EAAMe,aAER,kBAAMe,SAAU,SAAClC,GAAC,OAAKI,EAAM8B,SAASlC,EAAE,EAAC,WACtC,4BACG,kBACGE,OAAQ,SAACF,GAAC,OAAKgC,EAAY9B,OAAOF,EAAE,EACpCD,SAAU,SAACC,GAAC,OAAKgC,EAAYjC,SAASC,EAAE,EACxC1B,MAAO0D,EAAY1D,MACnB6D,KAAK,cACLN,KAAK,SAEPG,EAAYpC,SAAWoC,EAAYjD,QAAS,gBAAKqD,MAAO,CAAEC,MAAO,OAAQ,SAAEL,EAAYjD,YAE3F,0BACG,mBAAQuD,UAAWN,EAAY/C,WAAYoB,UAAWC,EAAAA,IAAM,4BAdtC,uBAoBlC,ECuBA,EAxCgB,SAACF,GACd,IAIMgB,EAAa,SAACmB,GACjBnC,EAAMgB,WAAWmB,EACpB,EACMvB,EAAqB,SAACuB,GACzBnC,EAAMY,mBAAmBuB,EAC5B,EACMzB,EAAqB,SAACyB,GACzBnC,EAAMU,mBAAmByB,EAC5B,EACIC,EAAUpC,EAAMqC,MAAMC,KAAI,SAAClC,GAAI,OAChC,SAAC,EAAI,CAEFA,KAAMA,EACNY,WAAYA,EACZN,mBAAoBA,EACpBE,mBAAoBA,EACpBG,YAAaf,EAAMe,aALdX,EAAKO,GAMX,IAEL,OACG,kBAAMV,UAAWC,EAAAA,KAAO,WACrB,gBAAKD,UAAWC,EAAAA,SAAW,UACxB,gBAAKC,IAAKH,EAAMuC,QAAQC,OAAOC,OAASC,EAAQpC,IAAI,gBAEvD,gBAAKL,UAAWC,EAAAA,KAAO,SAAEF,EAAMuC,QAAQI,YACvC,SAAC,EAAc,CACZvB,OAAQpB,EAAMoB,OACdG,iBAAkBvB,EAAMuB,iBACxBR,YAAaf,EAAMe,eAEtB,SAAC,EAAc,CAACe,SAlCH,SAAClC,GACjBA,EAAEgD,iBACF5C,EAAM6C,QAAQjD,EAAEC,OAAO+B,YAAY1D,MACtC,EA+B4C6C,YAAaf,EAAMe,eACzD,gBAAKd,UAAWC,EAAAA,MAAQ,SAAEkC,MAGnC,E,kDC9CaU,EAAW,SAACC,GAAK,OAAKA,EAAMC,YAAYX,KAAK,EAC7CY,EAAoB,SAACF,GAAK,OAAKA,EAAMC,YAAYE,cAAc,EAC/DC,EAAgB,SAACJ,GAAK,OAAKA,EAAMC,YAAYI,UAAU,EACvDC,EAAY,SAACN,GAAK,OAAKA,EAAMC,YAAY5B,MAAM,EAC/CkC,EAAa,SAACP,GAAK,OAAKA,EAAMC,YAAYT,OAAO,EACjDgB,EAAQ,SAACR,GAAK,OAAKA,EAAMS,KAAK7C,EAAE,E,UC6D7C,GAAe8C,EAAAA,EAAAA,KACZC,EAAAA,EAAAA,KA1BqB,SAACX,GACtB,MAAO,CACJV,MAAOS,EAASC,GAChBG,eAAgBD,EAAkBF,GAClCK,WAAYD,EAAcJ,GAC1BY,QAAQC,EAAAA,EAAAA,GAAUb,GAClB3B,OAAQiC,EAAUN,GAClBR,QAASe,EAAWP,GACpBpC,GAAI4C,EAAMR,GAEhB,GAgB4B,CACtBF,QAAAA,EAAAA,GACA7B,WAAAA,EAAAA,GACAJ,mBAAAA,EAAAA,GACAF,mBAAAA,EAAAA,GACAmD,eAAAA,EAAAA,GACAC,cAAAA,EAAAA,GACAvC,iBAAAA,EAAAA,KAEHwC,EAAAA,GC3EuB,SAACC,GAQxB,OAP4B,SAAChE,GAC1B,IAAIiE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACb,OAAO,SAACN,GAAS,kBAAKhE,GAAK,IAAEuE,OAAQ,CAAEN,SAAAA,EAAUE,SAAAA,EAAUE,OAAAA,KAC9D,CAGH,GDwDA,EAxC4B,SAACrE,GAC1B,IAAIwE,EAASxE,EAAMuE,OAAOF,OAAOG,OAC7BzD,GAAc,EACV8C,EAAkC7D,EAAlC6D,eAAgBC,EAAkB9D,EAAlB8D,cASxB,OARKU,IACFA,EAASxE,EAAMW,GACfI,GAAc,IAEjBhC,EAAAA,EAAAA,YAAU,WACP8E,EAAeW,GACfV,EAAcU,EACjB,GAAG,CAACA,EAAQX,EAAgBC,KACrB,8BAAG9D,EAAMoD,YAAa,SAACqB,EAAA,EAAO,KAAM,SAAC,GAAO,kBAAKzE,GAAK,IAAEe,YAAaA,MAC/E,G,4GEnCM2D,EAAkB,SAAC3B,GAAK,MAAM,CACjCY,QAAQC,EAAAA,EAAAA,GAAUb,GACpB,EAEYgB,EAAsB,SAACC,GAMjC,OADmCN,EAAAA,EAAAA,IAAQgB,EAARhB,EAJT,SAAC1D,GACxB,OAAKA,EAAM2D,QACJ,SAACK,GAAS,UAAKhE,KADI,SAAC,KAAQ,CAAC2E,SAAO,EAACC,GAAG,UAElD,GAGH,C","sources":["common/Hooks/useInput.jsx","webpack://my-app/./src/components/Main/Profile/Profile.module.css?e389","webpack://my-app/./src/components/Main/Profile/Posts/Post.module.css?a1d8","components/Main/Profile/Posts/Post.jsx","components/Main/Profile/ProfileStatus2.jsx","components/Main/Profile/AddPostForm.jsx","components/Main/Profile/Profile.jsx","Redux/profileSelectors.js","components/Main/Profile/ProfileContainer.js","hoc/withRouter.js","hoc/withAuthRedirection.js"],"sourcesContent":["import { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nconst validateEmail = (email) => {\r\n   return String(email)\r\n      .toLowerCase()\r\n      .match(\r\n         /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      )\r\n}\r\nconst useInput = (initialValue, validations) => {\r\n   let [value, setValue] = useState(initialValue)\r\n   let [isDirty, setDirty] = useState(false)\r\n\r\n   const valid = useValidation(value, validations)\r\n   const onChange = (e) => {\r\n      setValue(e.target.value)\r\n   }\r\n   const onBlur = (e) => {\r\n      setDirty(true)\r\n   }\r\n   return {\r\n      value,\r\n      isDirty,\r\n      onChange,\r\n      onBlur,\r\n      ...valid,\r\n   }\r\n}\r\nconst useValidation = (value, validations) => {\r\n   let [isEmpty, setEmpty] = useState(true)\r\n   let [minLengthError, setMinLengthError] = useState(false)\r\n   let [emailError, setEmailError] = useState(false)\r\n   let [error, setError] = useState('')\r\n   let [inputValid, setInputValid] = useState(false)\r\n   useEffect(() => {\r\n      for (const validation in validations) {\r\n         switch (validation) {\r\n            case 'minLenght':\r\n               value.length < validations[validation] ? setMinLengthError(true) : setMinLengthError(false)\r\n               break\r\n            case 'isEmpty':\r\n               value ? setEmpty(false) : setEmpty(true)\r\n               break\r\n            case 'isEmail':\r\n               setEmailError(!validateEmail(value))\r\n               break\r\n            default:\r\n               break\r\n         }\r\n      }\r\n   }, [value, validations])\r\n   useEffect(() => {\r\n      if (isEmpty) {\r\n         setError('Поле не може бути пустим')\r\n      } else if (emailError) {\r\n         setError('Некоректний емейл')\r\n      } else if (minLengthError) {\r\n         setError('Мінімальна довжина ' + validations.minLenght)\r\n      } else {\r\n         setError('')\r\n      }\r\n\r\n      if (isEmpty || minLengthError || emailError) {\r\n         setInputValid(false)\r\n      } else {\r\n         setInputValid(true)\r\n      }\r\n   }, [isEmpty, minLengthError, emailError, validations])\r\n   useEffect(() => {}, [])\r\n   return {\r\n      error,\r\n      inputValid,\r\n   }\r\n}\r\nexport default useInput\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Profile_main__YV3cZ\",\"main_img\":\"Profile_main_img__yfTkq\",\"textarea\":\"Profile_textarea__waFTE\",\"btn\":\"Profile_btn__Y5+Jz\",\"posts\":\"Profile_posts__-gQ-o\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__QrPww\",\"image\":\"Post_image__fE1ff\",\"discription\":\"Post_discription__ygkRU\",\"comments\":\"Post_comments__cDniO\"};","import React from 'react'\r\nimport s from './Post.module.css'\r\nconst Post = (props) => {\r\n   return (\r\n      <div className={s.post}>\r\n         <div className={s.image}>\r\n            <img src={props.post.image} alt=\"post\" />\r\n         </div>\r\n         <div className={s.discription}>\r\n            <p>{props.post.message}</p>\r\n         </div>\r\n         <div className={s.likesCount}>\r\n            <button\r\n               onClick={() => {\r\n                  props.post.liked ? props.decreaseLikesCount(props.post.id) : props.increaseLikesCount(props.post.id)\r\n               }}>\r\n               {props.post.likesCount}\r\n            </button>\r\n         </div>\r\n         <div className={s.comments}>\r\n            <div>{props.post.comments}</div>\r\n         </div>\r\n         {props.allowChange && (\r\n            <button\r\n               onClick={() => {\r\n                  props.deletePost(props.post.id)\r\n               }}>\r\n               Delete\r\n            </button>\r\n         )}\r\n      </div>\r\n   )\r\n}\r\nexport default React.memo(Post)\r\n","import { useState } from 'react'\r\n\r\nconst ProfileStatus2 = (props) => {\r\n   let [editMode, setEditMode] = useState(false)\r\n   let [status, setStatus] = useState(props.status)\r\n\r\n   let activateEditMode = () => {\r\n      if (props.allowChange) setEditMode(true)\r\n   }\r\n   let deactivateEditMode = () => {\r\n      setEditMode(false)\r\n      props.updateUserStatus(status)\r\n   }\r\n   let onChangeStatus = (e) => {\r\n      setStatus(e.currentTarget.value)\r\n   }\r\n   return (\r\n      <>\r\n         {!editMode ? (\r\n            <div>\r\n               <span onDoubleClick={activateEditMode}>{status || '------------'}</span>\r\n            </div>\r\n         ) : (\r\n            <div>\r\n               <input\r\n                  autoFocus={true}\r\n                  onBlur={deactivateEditMode}\r\n                  onChange={onChangeStatus}\r\n                  type=\"text\"\r\n                  defaultValue={status}\r\n               />\r\n            </div>\r\n         )}\r\n      </>\r\n   )\r\n}\r\nexport default ProfileStatus2\r\n","import useInput from '../../../common/Hooks/useInput'\r\nimport s from './Profile.module.css'\r\nlet AddNewPostForm = (props) => {\r\n   const postMessage = useInput('', { isEmpty: true, minLenght: 3 })\r\n   if (!props.allowChange) return <></>\r\n   return (\r\n      <form onSubmit={(e) => props.onSubmit(e)}>\r\n         <div>\r\n            <input\r\n               onBlur={(e) => postMessage.onBlur(e)}\r\n               onChange={(e) => postMessage.onChange(e)}\r\n               value={postMessage.value}\r\n               name=\"postMessage\"\r\n               type=\"text\"\r\n            />\r\n            {postMessage.isDirty && postMessage.error && <div style={{ color: 'red' }}>{postMessage.error}</div>}\r\n         </div>\r\n         <div>\r\n            <button disabled={!postMessage.inputValid} className={s.btn}>\r\n               Add post\r\n            </button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\nexport default AddNewPostForm\r\n","import React from 'react'\r\nimport s from './Profile.module.css'\r\nimport Post from './Posts/Post'\r\nimport avatar from '../../../assets/userAvatar.png'\r\nimport ProfileStatus2 from './ProfileStatus2'\r\nimport AddNewPostForm from './AddPostForm'\r\n\r\nconst Profile = (props) => {\r\n   const addNewPost = (e) => {\r\n      e.preventDefault()\r\n      props.addPost(e.target.postMessage.value)\r\n   }\r\n   const deletePost = (postId) => {\r\n      props.deletePost(postId)\r\n   }\r\n   const increaseLikesCount = (postId) => {\r\n      props.increaseLikesCount(postId)\r\n   }\r\n   const decreaseLikesCount = (postId) => {\r\n      props.decreaseLikesCount(postId)\r\n   }\r\n   let myPosts = props.posts.map((post) => (\r\n      <Post\r\n         key={post.id}\r\n         post={post}\r\n         deletePost={deletePost}\r\n         decreaseLikesCount={decreaseLikesCount}\r\n         increaseLikesCount={increaseLikesCount}\r\n         allowChange={props.allowChange}\r\n      />\r\n   ))\r\n   return (\r\n      <main className={s.main}>\r\n         <div className={s.main_img}>\r\n            <img src={props.profile.photos.large || avatar} alt=\"main-img\" />\r\n         </div>\r\n         <div className={s.name}>{props.profile.fullName}</div>\r\n         <ProfileStatus2\r\n            status={props.status}\r\n            updateUserStatus={props.updateUserStatus}\r\n            allowChange={props.allowChange}\r\n         />\r\n         <AddNewPostForm onSubmit={addNewPost} allowChange={props.allowChange} />\r\n         <div className={s.posts}>{myPosts}</div>\r\n      </main>\r\n   )\r\n}\r\nexport default Profile\r\n","export const getPosts = (state) => state.profilePage.posts\r\nexport const getNewPostMessage = (state) => state.profilePage.newPostMessage\r\nexport const getIsFetching = (state) => state.profilePage.isFetching\r\nexport const getStatus = (state) => state.profilePage.status\r\nexport const getProfile = (state) => state.profilePage.profile\r\nexport const getId = (state) => state.auth.id\r\n","import React, { useEffect } from 'react'\r\nimport {\r\n   addPost,\r\n   requestProfile,\r\n   getUserStatus,\r\n   updateUserStatus,\r\n   deletePost,\r\n   increaseLikesCount,\r\n   decreaseLikesCount,\r\n} from '../../../Redux/profileReducer'\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../../../common/Spinner'\r\nimport { withAuthRedirection } from '../../../hoc/withAuthRedirection'\r\nimport { withRouter } from '../../../hoc/withRouter'\r\nimport { compose } from 'redux'\r\nimport {\r\n   getId,\r\n   getIsFetching,\r\n   getNewPostMessage,\r\n   getPosts,\r\n   getProfile,\r\n   getStatus,\r\n} from '../../../Redux/profileSelectors'\r\nimport { getIsAuth } from '../../../Redux/authSelectors'\r\n\r\nconst ProfileApiComponent = (props) => {\r\n   let userId = props.router.params.userId\r\n   let allowChange = false\r\n   const { requestProfile, getUserStatus } = props\r\n   if (!userId) {\r\n      userId = props.id\r\n      allowChange = true\r\n   }\r\n   useEffect(() => {\r\n      requestProfile(userId)\r\n      getUserStatus(userId)\r\n   }, [userId, requestProfile, getUserStatus])\r\n   return <>{props.isFetching ? <Spinner /> : <Profile {...props} allowChange={allowChange} />}</>\r\n}\r\n\r\nconst MapStateToProps = (state) => {\r\n   return {\r\n      posts: getPosts(state),\r\n      newPostMessage: getNewPostMessage(state),\r\n      isFetching: getIsFetching(state),\r\n      isAuth: getIsAuth(state),\r\n      status: getStatus(state),\r\n      profile: getProfile(state),\r\n      id: getId(state),\r\n   }\r\n}\r\n// const DispatchToProps = (dispatch) => {\r\n//    return {\r\n//       onPostChange: (text) => {\r\n//          dispatch(updateMessageActionCreator(text))\r\n//       },\r\n//       addPost: () => {\r\n//          dispatch(addPostActionCreator())\r\n//       },\r\n//       setState: (posts) => {\r\n//          dispatch(setStateAC(posts))\r\n//       },\r\n//    }\r\n// }\r\n\r\nexport default compose(\r\n   connect(MapStateToProps, {\r\n      addPost,\r\n      deletePost,\r\n      increaseLikesCount,\r\n      decreaseLikesCount,\r\n      requestProfile,\r\n      getUserStatus,\r\n      updateUserStatus,\r\n   }),\r\n   withAuthRedirection,\r\n   withRouter\r\n)(ProfileApiComponent)\r\n","import { useLocation, useNavigate, useParams } from 'react-router-dom'\r\nexport const withRouter = (Component) => {\r\n   const ComponentWithRouter = (props) => {\r\n      let location = useLocation()\r\n      let navigate = useNavigate()\r\n      let params = useParams()\r\n      return <Component {...props} router={{ location, navigate, params }} />\r\n   }\r\n\r\n   return ComponentWithRouter\r\n}\r\n","import { connect } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { getIsAuth } from '../Redux/authSelectors'\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: getIsAuth(state),\r\n})\r\n\r\nexport const withAuthRedirection = (Component) => {\r\n   const RedirectComponent = (props) => {\r\n      if (!props.isAuth) return <Navigate replace to=\"/login\" />\r\n      return <Component {...props} />\r\n   }\r\n   const ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n   return ConnectedRedirectComponent\r\n}\r\n"],"names":["useValidation","value","validations","useState","isEmpty","setEmpty","minLengthError","setMinLengthError","emailError","setEmailError","error","setError","inputValid","setInputValid","useEffect","validation","length","String","toLowerCase","match","minLenght","initialValue","setValue","isDirty","setDirty","valid","onChange","e","target","onBlur","Post","props","className","s","src","post","image","alt","message","onClick","liked","decreaseLikesCount","id","increaseLikesCount","likesCount","comments","allowChange","deletePost","React","editMode","setEditMode","status","setStatus","autoFocus","updateUserStatus","currentTarget","type","defaultValue","onDoubleClick","postMessage","useInput","onSubmit","name","style","color","disabled","postId","myPosts","posts","map","profile","photos","large","avatar","fullName","preventDefault","addPost","getPosts","state","profilePage","getNewPostMessage","newPostMessage","getIsFetching","isFetching","getStatus","getProfile","getId","auth","compose","connect","isAuth","getIsAuth","requestProfile","getUserStatus","withAuthRedirection","Component","location","useLocation","navigate","useNavigate","params","useParams","router","userId","Spinner","mapStateToProps","replace","to"],"sourceRoot":""}