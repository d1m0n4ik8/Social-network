{"version":3,"file":"static/js/294.920dc1e3.chunk.js","mappings":"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","sources":["common/Hooks/useInput.jsx","webpack://my-app/./src/components/Login/Login.module.css?3530","components/Login/Login.jsx"],"sourcesContent":["import { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nconst validateEmail = (email) => {\r\n   return String(email)\r\n      .toLowerCase()\r\n      .match(\r\n         /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      )\r\n}\r\nconst useInput = (initialValue, validations) => {\r\n   let [value, setValue] = useState(initialValue)\r\n   let [isDirty, setDirty] = useState(false)\r\n\r\n   const valid = useValidation(value, validations)\r\n   const onChange = (e) => {\r\n      setValue(e.target.value)\r\n   }\r\n   const onBlur = (e) => {\r\n      setDirty(true)\r\n   }\r\n   return {\r\n      value,\r\n      isDirty,\r\n      onChange,\r\n      onBlur,\r\n      ...valid,\r\n   }\r\n}\r\nconst useValidation = (value, validations) => {\r\n   let [isEmpty, setEmpty] = useState(true)\r\n   let [minLengthError, setMinLengthError] = useState(false)\r\n   let [emailError, setEmailError] = useState(false)\r\n   let [error, setError] = useState('')\r\n   let [inputValid, setInputValid] = useState(false)\r\n   useEffect(() => {\r\n      for (const validation in validations) {\r\n         switch (validation) {\r\n            case 'minLenght':\r\n               value.length < validations[validation] ? setMinLengthError(true) : setMinLengthError(false)\r\n               break\r\n            case 'isEmpty':\r\n               value ? setEmpty(false) : setEmpty(true)\r\n               break\r\n            case 'isEmail':\r\n               setEmailError(!validateEmail(value))\r\n               break\r\n            default:\r\n               break\r\n         }\r\n      }\r\n   }, [value, validations])\r\n   useEffect(() => {\r\n      if (isEmpty) {\r\n         setError('Поле не може бути пустим')\r\n      } else if (emailError) {\r\n         setError('Некоректний емейл')\r\n      } else if (minLengthError) {\r\n         setError('Мінімальна довжина ' + validations.minLenght)\r\n      } else {\r\n         setError('')\r\n      }\r\n\r\n      if (isEmpty || minLengthError || emailError) {\r\n         setInputValid(false)\r\n      } else {\r\n         setInputValid(true)\r\n      }\r\n   }, [isEmpty, minLengthError, emailError, validations])\r\n   useEffect(() => {}, [])\r\n   return {\r\n      error,\r\n      inputValid,\r\n   }\r\n}\r\nexport default useInput\r\n","// extracted by mini-css-extract-plugin\nexport default {\"rememberMe\":\"Login_rememberMe__ge-pn\",\"summaryError\":\"Login_summaryError__xgUq9\"};","import { connect } from 'react-redux'\r\nimport { login } from '../../Redux/authReducer'\r\nimport s from './Login.module.css'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { getIsAuth } from '../../Redux/authSelectors'\r\nimport useInput from '../../common/Hooks/useInput'\r\n\r\nconst Login = (props) => {\r\n   const onSubmit = (e) => {\r\n      e.preventDefault()\r\n      props.login(e.target.login.value, e.target.password.value, e.target.rememberMe.checked)\r\n   }\r\n   if (props.isAuth) return <Navigate replace to=\"/profile\" />\r\n   return (\r\n      <div>\r\n         <div>\r\n            <h1>Login</h1>\r\n         </div>\r\n         <LoginForm onSubmit={onSubmit} />\r\n      </div>\r\n   )\r\n}\r\n\r\nlet LoginForm = (props) => {\r\n   const login = useInput('', { isEmpty: true, minLenght: 3, isEmail: true })\r\n   const password = useInput('', { isEmpty: true, minLenght: 3 })\r\n   return (\r\n      <form onSubmit={(e) => props.onSubmit(e)}>\r\n         <div>\r\n            <input\r\n               onBlur={(e) => login.onBlur(e)}\r\n               onChange={(e) => login.onChange(e)}\r\n               value={login.value}\r\n               name=\"login\"\r\n               type=\"text\"\r\n            />\r\n         </div>\r\n         {login.isDirty && login.error && <div style={{ color: 'red' }}>{login.error}</div>}\r\n         <div>\r\n            <input\r\n               onBlur={(e) => password.onBlur(e)}\r\n               onChange={(e) => password.onChange(e)}\r\n               value={password.value}\r\n               name=\"password\"\r\n               type=\"text\"\r\n            />\r\n            {password.isDirty && password.error && <div style={{ color: 'red' }}>{password.error}</div>}\r\n         </div>\r\n         <div className={s.rememberMe}>\r\n            <input name=\"rememberMe\" type=\"checkBox\" />\r\n            Remember me\r\n         </div>\r\n         <button>log in</button>\r\n      </form>\r\n   )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n   isAuth: getIsAuth(state),\r\n})\r\nexport default connect(mapStateToProps, { login })(Login)\r\n"],"names":["useValidation","value","validations","useState","isEmpty","setEmpty","minLengthError","setMinLengthError","emailError","setEmailError","error","setError","inputValid","setInputValid","useEffect","validation","length","String","toLowerCase","match","minLenght","initialValue","setValue","isDirty","setDirty","valid","onChange","e","target","onBlur","LoginForm","props","login","useInput","isEmail","password","onSubmit","name","type","style","color","className","s","connect","state","isAuth","getIsAuth","replace","to","preventDefault","rememberMe","checked"],"sourceRoot":""}