{"version":3,"file":"static/js/265.188f9814.chunk.js","mappings":"gKACA,G,QAAA,CAAgB,SAAW,2BAA2B,OAAS,yBAAyB,YAAc,8BAA8B,KAAO,uBAAuB,SAAW,2BAA2B,IAAM,wBCA9M,EAA0B,6B,SCS1B,EARgB,SAACA,GACd,OACG,iBAAKC,UAAWC,EAAU,WACvB,gBAAKC,IAAKH,EAAMI,OAAQC,IAAI,YAC5B,yBAAML,EAAMM,YAGrB,ECRA,GAAgB,QAAU,4BAA4B,OAAS,2BAA2B,SAAW,6BAA6B,QAAU,6BCc5I,EAbmB,SAACN,GACjB,OACG,iBAAKC,UAAWC,EAAAA,QAAU,WACvB,gBAAKD,UAAWC,EAAAA,OAAS,UACtB,gBAAKC,IAAKH,EAAMO,MAAOF,IAAI,cAE9B,iBAAKJ,UAAWC,EAAAA,SAAW,WACxB,gBAAKD,UAAWC,EAAAA,KAAO,SAAEF,EAAMQ,QAC/B,gBAAKP,UAAWC,EAAAA,QAAU,SAAEF,EAAMS,eAI9C,ECJA,EARmB,SAACT,GACjB,OACG,kBAAMC,UAAWC,EAAAA,KAAQQ,SAAUV,EAAMW,aAAa,WACnD,kBAAOV,UAAWC,EAAAA,SAAYM,KAAK,UAAUI,YAAY,mBACzD,mBAAQX,UAAWC,EAAAA,IAAM,oBAGlC,ECcA,EAlBiB,SAACF,GACf,IAAIa,EAAUb,EAAMc,OAAOC,KAAI,SAACC,GAAE,OAC/B,SAAC,EAAU,CAAaR,KAAMQ,EAAGR,KAAMC,QAASO,EAAGP,QAASF,MAAOS,EAAGT,OAArDS,EAAGC,GAA2D,IAE9EC,EAAWlB,EAAMkB,SAASH,KAAI,SAACC,GAAE,OAAK,SAACG,EAAW,CAAab,QAASU,EAAGV,QAASF,OAAQY,EAAGZ,QAAvCY,EAAGC,GAA8C,IAI7G,OACG,iBAAKhB,UAAWC,EAAAA,SAAW,WACxB,gBAAKD,UAAWC,EAAAA,OAAS,SAAEW,KAC3B,iBAAKZ,UAAWC,EAAAA,YAAc,WAC3B,gBAAKD,UAAWC,EAAAA,QAAU,SAAEgB,KAC5B,SAAC,EAAY,CAACR,SARD,SAACU,GACpBpB,EAAMqB,cAAcD,EAAOd,QAC9B,SAUH,E,wCCtBagB,EAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWV,MAAM,EAC9CW,EAAc,SAACF,GAAK,OAAKA,EAAMC,WAAWN,QAAQ,EAClDQ,EAAgB,SAACH,GAAK,OAAKA,EAAMC,WAAWG,UAAU,ECYnE,GAAeC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KANC,SAACN,GAAK,MAAM,CACjCT,OAAQQ,EAAUC,GAClBL,SAAUO,EAAYF,GACtBI,WAAYD,EAAcH,GAC1BO,QAAQC,EAAAA,EAAAA,IAAUR,GACpB,GAC+C,CAAEF,cAAAA,EAAAA,IAAkBW,EAAAA,EAApE,CAAyFC,E,4GCVnFC,EAAkB,SAACX,GAAK,MAAM,CACjCO,QAAQC,EAAAA,EAAAA,IAAUR,GACpB,EAEYS,EAAsB,SAACG,GAMjC,OADmCN,EAAAA,EAAAA,IAAQK,EAARL,EAJT,SAAC7B,GACxB,OAAKA,EAAM8B,QACJ,SAACK,GAAS,UAAKnC,KADI,SAAC,KAAQ,CAACoC,SAAO,EAACC,GAAG,UAElD,GAGH,C","sources":["webpack://my-app/./src/components/Main/Messages/Messages.module.css?ce34","webpack://my-app/./src/components/Main/Messages/Message/MessageItem.module.css?abf3","components/Main/Messages/Message/MessageItem.jsx","webpack://my-app/./src/components/Main/Messages/Dialogs/DialogItem.module.css?16d8","components/Main/Messages/Dialogs/DialogItem.jsx","components/Main/Messages/MessagesForm.jsx","components/Main/Messages/Messages.jsx","Redux/dialogSelector.js","components/Main/Messages/MessagesContainer.js","hoc/withAuthRedirection.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Messages_messages__FMqZ2\",\"dialog\":\"Messages_dialog__3mrDi\",\"userMessage\":\"Messages_userMessage__8+ZaV\",\"form\":\"Messages_form__k5R4d\",\"textarea\":\"Messages_textarea__pW7Ns\",\"btn\":\"Messages_btn__8sI5O\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"MessageItem_message__lX3AA\"};","import React from 'react'\r\nimport s from './MessageItem.module.css'\r\nconst Message = (props) => {\r\n   return (\r\n      <div className={s.message}>\r\n         <img src={props.avatar} alt=\"avatar\" />\r\n         <div>{props.message}</div>\r\n      </div>\r\n   )\r\n}\r\nexport default Message\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"DialogItem_dialogs__pf8nx\",\"avatar\":\"DialogItem_avatar__e+Rif\",\"userName\":\"DialogItem_userName__GTgJa\",\"surname\":\"DialogItem_surname__55HA4\"};","import React from 'react'\r\nimport s from './DialogItem.module.css'\r\nconst DialogItem = (props) => {\r\n   return (\r\n      <div className={s.dialogs}>\r\n         <div className={s.avatar}>\r\n            <img src={props.image} alt=\"avatar\" />\r\n         </div>\r\n         <div className={s.userName}>\r\n            <div className={s.name}>{props.name}</div>\r\n            <div className={s.surname}>{props.surname}</div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\nexport default DialogItem\r\n","import s from './Messages.module.css'\r\n\r\nlet MessagesForm = (props) => {\r\n   return (\r\n      <form className={s.form} onSubmit={props.handleSubmit}>\r\n         <input className={s.textarea} name=\"message\" placeholder=\"Write message\" />\r\n         <button className={s.btn}>Send</button>\r\n      </form>\r\n   )\r\n}\r\nexport default MessagesForm\r\n","import React from 'react'\r\nimport s from './Messages.module.css'\r\nimport MessageItem from './Message/MessageItem'\r\nimport DialogItem from './Dialogs/DialogItem'\r\nimport MessagesForm from './MessagesForm'\r\nconst Messages = (props) => {\r\n   let dialogs = props.dialog.map((el) => (\r\n      <DialogItem key={el.id} name={el.name} surname={el.surname} image={el.image} />\r\n   ))\r\n   let messages = props.messages.map((el) => <MessageItem key={el.id} message={el.message} avatar={el.avatar} />)\r\n   const addNewMessage = (values) => {\r\n      props.addNewMessage(values.message)\r\n   }\r\n   return (\r\n      <div className={s.messages}>\r\n         <div className={s.dialog}>{dialogs}</div>\r\n         <div className={s.userMessage}>\r\n            <div className={s.message}>{messages}</div>\r\n            <MessagesForm onSubmit={addNewMessage} />\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\nexport default Messages\r\n","export const getDialog = (state) => state.dialogPage.dialog\r\nexport const getMessages = (state) => state.dialogPage.messages\r\nexport const getNewMessage = (state) => state.dialogPage.newMessage\r\n","import { addNewMessage } from '../../../Redux/dialogReducer'\r\nimport Messages from './Messages'\r\nimport { connect } from 'react-redux'\r\nimport { withAuthRedirection } from '../../../hoc/withAuthRedirection'\r\nimport { compose } from 'redux'\r\nimport { getIsAuth } from '../../../Redux/authSelectors'\r\nimport { getDialog, getMessages, getNewMessage } from '../../../Redux/dialogSelector'\r\n\r\nconst MapStateToProps = (state) => ({\r\n   dialog: getDialog(state),\r\n   messages: getMessages(state),\r\n   newMessage: getNewMessage(state),\r\n   isAuth: getIsAuth(state),\r\n})\r\nexport default compose(connect(MapStateToProps, { addNewMessage }), withAuthRedirection)(Messages)\r\n","import { connect } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { getIsAuth } from '../Redux/authSelectors'\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: getIsAuth(state),\r\n})\r\n\r\nexport const withAuthRedirection = (Component) => {\r\n   const RedirectComponent = (props) => {\r\n      if (!props.isAuth) return <Navigate replace to=\"/login\" />\r\n      return <Component {...props} />\r\n   }\r\n   const ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n   return ConnectedRedirectComponent\r\n}\r\n"],"names":["props","className","s","src","avatar","alt","message","image","name","surname","onSubmit","handleSubmit","placeholder","dialogs","dialog","map","el","id","messages","MessageItem","values","addNewMessage","getDialog","state","dialogPage","getMessages","getNewMessage","newMessage","compose","connect","isAuth","getIsAuth","withAuthRedirection","Messages","mapStateToProps","Component","replace","to"],"sourceRoot":""}