{"version":3,"file":"static/js/341.19b8bc19.chunk.js","mappings":"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","sources":["common/Hooks/useInput.jsx","components/Main/Profile/Posts/Post.jsx","components/Main/Profile/ProfileStatus2.jsx","webpack://my-app/./src/components/Main/Profile/Profile.module.css?e389","components/Main/Profile/AddPostForm.jsx","components/Main/Profile/ProfileEditForm.jsx","components/Main/Profile/Contacts.jsx","components/Main/Profile/ProfileInfo.jsx","common/UploadButton.jsx","components/Main/Profile/Profile.jsx","Redux/profileSelectors.js","components/Main/Profile/ProfileContainer.js","hoc/withRouter.js","hoc/withAuthRedirection.js"],"sourcesContent":["import { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nconst validateEmail = (email) => {\r\n   return String(email)\r\n      .toLowerCase()\r\n      .match(\r\n         /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      )\r\n}\r\nconst useInput = (initialValue, validations) => {\r\n   let [value, setValue] = useState(initialValue)\r\n   let [isDirty, setDirty] = useState(false)\r\n\r\n   const valid = useValidation(value, validations)\r\n   const onChange = (e) => {\r\n      setValue(e.target.value)\r\n   }\r\n   const onBlur = (e) => {\r\n      setDirty(true)\r\n   }\r\n   return {\r\n      value,\r\n      isDirty,\r\n      onChange,\r\n      onBlur,\r\n      ...valid,\r\n   }\r\n}\r\nconst useValidation = (value, validations) => {\r\n   let [isEmpty, setEmpty] = useState(true)\r\n   let [minLengthError, setMinLengthError] = useState(false)\r\n   let [emailError, setEmailError] = useState(false)\r\n   let [error, setError] = useState('')\r\n   let [inputValid, setInputValid] = useState(false)\r\n   useEffect(() => {\r\n      for (const validation in validations) {\r\n         switch (validation) {\r\n            case 'minLenght':\r\n               value.length < validations[validation] ? setMinLengthError(true) : setMinLengthError(false)\r\n               break\r\n            case 'isEmpty':\r\n               value ? setEmpty(false) : setEmpty(true)\r\n               break\r\n            case 'isEmail':\r\n               setEmailError(!validateEmail(value))\r\n               break\r\n            default:\r\n               break\r\n         }\r\n      }\r\n   }, [value, validations])\r\n   useEffect(() => {\r\n      if (isEmpty) {\r\n         setError('Поле не може бути пустим')\r\n      } else if (emailError) {\r\n         setError('Некоректний емейл')\r\n      } else if (minLengthError) {\r\n         setError('Мінімальна довжина ' + validations.minLenght)\r\n      } else {\r\n         setError('')\r\n      }\r\n\r\n      if (isEmpty || minLengthError || emailError) {\r\n         setInputValid(false)\r\n      } else {\r\n         setInputValid(true)\r\n      }\r\n   }, [isEmpty, minLengthError, emailError, validations])\r\n   useEffect(() => {}, [])\r\n   return {\r\n      error,\r\n      inputValid,\r\n   }\r\n}\r\nexport default useInput\r\n","import { CommentOutlined, DeleteOutlined, LikeOutlined, MoreOutlined, ShareAltOutlined } from '@ant-design/icons'\r\nimport { Avatar, Card, Col, Dropdown, Row, Space, message, Popconfirm, Image } from 'antd'\r\nimport React, { useState } from 'react'\r\n//import s from './Post.module.css'\r\nconst { Meta } = Card\r\n\r\nconst Post = (props) => {\r\n   const [open, setOpen] = useState(false)\r\n   const handleOpenChange = (flag) => {\r\n      setOpen(flag)\r\n   }\r\n   const confirm = () => {\r\n      props.deletePost(props.post.id)\r\n      message.success('Post deleted')\r\n   }\r\n\r\n   const items = [\r\n      {\r\n         key: '1',\r\n         label: (\r\n            <Popconfirm\r\n               title=\"Delete the post\"\r\n               description=\"Are you sure to delete this post?\"\r\n               onConfirm={confirm}\r\n               okText=\"Yes\"\r\n               cancelText=\"No\">\r\n               <Space>\r\n                  <DeleteOutlined />\r\n                  Delete\r\n               </Space>\r\n            </Popconfirm>\r\n         ),\r\n      },\r\n   ]\r\n   return (\r\n      <Space wrap>\r\n         <Card\r\n            title={\r\n               <Row justify=\"space-between\" align=\"middle\">\r\n                  <Col>\r\n                     <Space>\r\n                        <Avatar size={30} icon={<img src={props.userAvatar} alt=\"main-img\" />} />\r\n                        {props.userName}\r\n                     </Space>\r\n                  </Col>\r\n                  <Col>\r\n                     {props.allowChange && (\r\n                        <Dropdown\r\n                           placement=\"bottomRight\"\r\n                           trigger=\"click\"\r\n                           menu={{ items }}\r\n                           onOpenChange={handleOpenChange}\r\n                           open={open}>\r\n                           <MoreOutlined />\r\n                        </Dropdown>\r\n                     )}\r\n                  </Col>\r\n               </Row>\r\n            }\r\n            hoverable\r\n            style={{ width: 240 }}\r\n            cover={<Image height={200} alt=\"postImage\" src={props.post.image} />}\r\n            actions={[\r\n               <div\r\n                  onClick={() => {\r\n                     props.post.liked\r\n                        ? props.decreaseLikesCount(props.post.id)\r\n                        : props.increaseLikesCount(props.post.id)\r\n                  }}>\r\n                  {props.post.likesCount}\r\n                  <LikeOutlined key=\"like\" />\r\n               </div>,\r\n               <CommentOutlined key=\"comment\" />,\r\n               <ShareAltOutlined key=\"share\" />,\r\n            ]}>\r\n            <Meta title={props.post.message} description=\"www.instagram.com\" />\r\n         </Card>\r\n      </Space>\r\n   )\r\n}\r\nexport default React.memo(Post)\r\n","import { useEffect } from 'react'\r\nimport { useState } from 'react'\r\n\r\nconst ProfileStatus2 = (props) => {\r\n   let [editMode, setEditMode] = useState(false)\r\n   let [status, setStatus] = useState(props.status)\r\n   useEffect(() => setStatus(props.status), [props.status])\r\n   let activateEditMode = () => {\r\n      if (props.allowChange) setEditMode(true)\r\n   }\r\n   let deactivateEditMode = () => {\r\n      setEditMode(false)\r\n      props.updateUserStatus(status)\r\n   }\r\n   let onChangeStatus = (e) => {\r\n      setStatus(e.currentTarget.value)\r\n   }\r\n   return (\r\n      <>\r\n         <b>Status </b>\r\n         {!editMode ? (\r\n            <div>\r\n               <span onDoubleClick={activateEditMode}>{status || '------------'}</span>\r\n            </div>\r\n         ) : (\r\n            <div>\r\n               <input\r\n                  autoFocus={true}\r\n                  onBlur={deactivateEditMode}\r\n                  onChange={onChangeStatus}\r\n                  type=\"text\"\r\n                  defaultValue={status}\r\n               />\r\n            </div>\r\n         )}\r\n      </>\r\n   )\r\n}\r\nexport default ProfileStatus2\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Profile_main__YV3cZ\",\"textarea\":\"Profile_textarea__waFTE\",\"btn\":\"Profile_btn__Y5+Jz\",\"posts\":\"Profile_posts__-gQ-o\",\"contactsIcon\":\"Profile_contactsIcon__i+3Sf\"};","import useInput from '../../../common/Hooks/useInput'\r\nimport s from './Profile.module.css'\r\nlet AddNewPostForm = (props) => {\r\n   const postMessage = useInput('', { isEmpty: true, minLenght: 3 })\r\n   if (!props.allowChange) return <></>\r\n   return (\r\n      <form onSubmit={props.onSubmit}>\r\n         <div>\r\n            <input\r\n               onBlur={postMessage.onBlur}\r\n               onChange={postMessage.onChange}\r\n               value={postMessage.value}\r\n               name=\"postMessage\"\r\n               type=\"text\"\r\n            />\r\n            {postMessage.isDirty && postMessage.error && <div style={{ color: 'red' }}>{postMessage.error}</div>}\r\n         </div>\r\n         <div>\r\n            <button disabled={!postMessage.inputValid} className={s.btn}>\r\n               Add post\r\n            </button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\nexport default AddNewPostForm\r\n","import { Button, Modal } from 'antd'\r\nimport { useState } from 'react'\r\nimport useInput from '../../../common/Hooks/useInput'\r\nimport { CheckOutlined, CloseOutlined, EditOutlined } from '@ant-design/icons'\r\n\r\nconst ProfileEditForm = (props) => {\r\n   const [isModalOpen, setIsModalOpen] = useState(false)\r\n   const showModal = () => {\r\n      setIsModalOpen(true)\r\n   }\r\n   const handleOk = () => {\r\n      const profileInfo = {\r\n         ...props.profile,\r\n         aboutMe: aboutMe.value,\r\n         contacts: {\r\n            facebook: facebook.value,\r\n            website: website.value,\r\n            twitter: twitter.value,\r\n            instagram: instagram.value,\r\n            youtube: youtube.value,\r\n            github: github.value,\r\n            mainLink: mainLink.value,\r\n         },\r\n         lookingForAJob: lookingForAJob.value,\r\n         lookingForAJobDescription: lookingForAJobDescription.value,\r\n         fullName: fullName.value,\r\n      }\r\n      props.onSubmit(profileInfo)\r\n      setIsModalOpen(false)\r\n   }\r\n   const handleCancel = () => {\r\n      setIsModalOpen(false)\r\n   }\r\n\r\n   const fullName = useInput(props.profile.fullName ? props.profile.fullName : '', { isEmpty: true, minLenght: 3 })\r\n   const aboutMe = useInput(props.profile.aboutMe ? props.profile.aboutMe : '', {})\r\n   const lookingForAJob = useInput(props.profile.aboutMe ? props.profile.aboutMe : props.profile.lookingForAJob, {})\r\n   const lookingForAJobDescription = useInput(\r\n      props.profile.lookingForAJobDescription ? props.profile.lookingForAJobDescription : '',\r\n      {}\r\n   )\r\n   const facebook = useInput(props.profile.facebook ? props.profile.facebook : '', {})\r\n   const website = useInput(props.profile.website ? props.profile.website : '', {})\r\n   const twitter = useInput(props.profile.twitter ? props.profile.twitter : '', {})\r\n   const instagram = useInput(props.profile.instagram ? props.profile.instagram : '', {})\r\n   const youtube = useInput(props.profile.youtube ? props.profile.youtube : '', {})\r\n   const github = useInput(props.profile.github ? props.profile.github : '', {})\r\n   const mainLink = useInput(props.profile.mainLink ? props.profile.mainLink : '', {})\r\n\r\n   return (\r\n      <>\r\n         <Button type=\"primary\" onClick={showModal}>\r\n            Edit profile info <EditOutlined />\r\n         </Button>\r\n         <Modal\r\n            title=\"User profile\"\r\n            closable={false}\r\n            open={isModalOpen}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            footer={[\r\n               <Button key=\"back\" onClick={handleCancel}>\r\n                  Return <CloseOutlined />\r\n               </Button>,\r\n               <Button key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n                  Save <CheckOutlined />\r\n               </Button>,\r\n            ]}>\r\n            <form id=\"ProfileInfoForm\" onSubmit={props.onSubmit}>\r\n               <div>\r\n                  <b>Full name : </b>\r\n                  <input\r\n                     type=\"text\"\r\n                     name=\"fullName\"\r\n                     onBlur={fullName.onBlur}\r\n                     onChange={fullName.onChange}\r\n                     value={fullName.value}\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <b>About me : </b>\r\n                  <textarea\r\n                     type=\"text\"\r\n                     name=\"aboutMe\"\r\n                     onBlur={aboutMe.onBlur}\r\n                     onChange={aboutMe.onChange}\r\n                     value={aboutMe.value}\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <b>Looking for a job</b>\r\n                  <input\r\n                     onChange={lookingForAJob.onChange}\r\n                     type=\"checkbox\"\r\n                     name=\"lookingForAJob\"\r\n                     value={lookingForAJob.value}\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <b>Skills </b>\r\n                  <textarea\r\n                     type=\"text\"\r\n                     name=\"lookingForAJobDescription\"\r\n                     onBlur={lookingForAJobDescription.onBlur}\r\n                     onChange={lookingForAJobDescription.onChange}\r\n                     value={lookingForAJobDescription.value}\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <div>\r\n                     <b>Facebook </b>\r\n                     <input\r\n                        type=\"text\"\r\n                        name=\"facebook\"\r\n                        onBlur={facebook.onBlur}\r\n                        onChange={facebook.onChange}\r\n                        value={facebook.value}\r\n                     />\r\n                  </div>\r\n                  <div>\r\n                     <b>Website </b>\r\n                     <input\r\n                        type=\"text\"\r\n                        name=\"website\"\r\n                        onBlur={website.onBlur}\r\n                        onChange={website.onChange}\r\n                        value={website.value}\r\n                     />\r\n                  </div>\r\n                  <div>\r\n                     <b>Twitter </b>\r\n                     <input\r\n                        type=\"text\"\r\n                        name=\"twitter\"\r\n                        onBlur={twitter.onBlur}\r\n                        onChange={twitter.onChange}\r\n                        value={twitter.value}\r\n                     />\r\n                  </div>\r\n                  <div>\r\n                     <b>Instagram </b>\r\n                     <input\r\n                        type=\"text\"\r\n                        name=\"instagram\"\r\n                        onBlur={instagram.onBlur}\r\n                        onChange={instagram.onChange}\r\n                        value={instagram.value}\r\n                     />\r\n                  </div>\r\n                  <div>\r\n                     <b>Youtube </b>\r\n                     <input\r\n                        type=\"text\"\r\n                        name=\"youtube\"\r\n                        onBlur={youtube.onBlur}\r\n                        onChange={youtube.onChange}\r\n                        value={youtube.value}\r\n                     />\r\n                  </div>\r\n                  <div>\r\n                     <b>Github </b>\r\n                     <input\r\n                        type=\"text\"\r\n                        name=\"github\"\r\n                        onBlur={github.onBlur}\r\n                        onChange={github.onChange}\r\n                        value={github.value}\r\n                     />\r\n                  </div>\r\n                  <div>\r\n                     <b>Main Link </b>\r\n                     <input\r\n                        type=\"text\"\r\n                        name=\"mainLink\"\r\n                        onBlur={mainLink.onBlur}\r\n                        onChange={mainLink.onChange}\r\n                        value={mainLink.value}\r\n                     />\r\n                  </div>\r\n               </div>\r\n            </form>\r\n         </Modal>\r\n      </>\r\n   )\r\n}\r\nexport default ProfileEditForm\r\n","import React from 'react'\r\nimport {\r\n   ChromeOutlined,\r\n   FacebookOutlined,\r\n   GithubOutlined,\r\n   InstagramOutlined,\r\n   LinkedinOutlined,\r\n   TwitterOutlined,\r\n   YoutubeOutlined,\r\n   CaretDownOutlined,\r\n} from '@ant-design/icons'\r\nimport { Dropdown } from 'antd'\r\n\r\nimport s from './Profile.module.css'\r\n\r\nconst Contacts = ({ contacts }) => {\r\n   const items = [\r\n      {\r\n         key: '1',\r\n         label: (\r\n            <>\r\n               <b>Facebook</b> {contacts.facebook}\r\n            </>\r\n         ),\r\n         icon: <FacebookOutlined className={s.contactsIcon} />,\r\n      },\r\n      {\r\n         key: '2',\r\n         label: (\r\n            <>\r\n               <b>Website</b> {contacts.website}\r\n            </>\r\n         ),\r\n         icon: <ChromeOutlined className={s.contactsIcon} />,\r\n      },\r\n      {\r\n         key: '3',\r\n         label: (\r\n            <>\r\n               <b>Twitter</b> {contacts.twitter}\r\n            </>\r\n         ),\r\n         icon: <TwitterOutlined className={s.contactsIcon} />,\r\n      },\r\n      {\r\n         key: '4',\r\n         label: (\r\n            <>\r\n               <b>Instagram</b> {contacts.instagram}\r\n            </>\r\n         ),\r\n         icon: <InstagramOutlined className={s.contactsIcon} />,\r\n      },\r\n      {\r\n         key: '5',\r\n         label: (\r\n            <>\r\n               <b>Youtube</b> {contacts.youtube}\r\n            </>\r\n         ),\r\n         icon: <YoutubeOutlined className={s.contactsIcon} />,\r\n      },\r\n      {\r\n         key: '6',\r\n         label: (\r\n            <>\r\n               <b>Github</b> {contacts.github}\r\n            </>\r\n         ),\r\n         icon: <GithubOutlined className={s.contactsIcon} />,\r\n      },\r\n      {\r\n         key: '7',\r\n         label: (\r\n            <>\r\n               <b>Main Link</b> {contacts.mainLink}\r\n            </>\r\n         ),\r\n         icon: <LinkedinOutlined className={s.contactsIcon} />,\r\n      },\r\n   ]\r\n   return (\r\n      <div>\r\n         <Dropdown\r\n            menu={{\r\n               items,\r\n            }}>\r\n            <div onClick={(e) => e.preventDefault()}>\r\n               Contacts <CaretDownOutlined />\r\n            </div>\r\n         </Dropdown>\r\n      </div>\r\n   )\r\n}\r\nexport default Contacts\r\n","import Contacts from './Contacts'\r\n\r\nconst ProfileInfo = (props) => {\r\n   return (\r\n      <div>\r\n         <div>{props.profile.fullName}</div>\r\n         <div>{props.profile.aboutMe}</div>\r\n         {props.profile.lookingForAJob ? (\r\n            <div>\r\n               <div>\r\n                  <b>Looking for a job</b>\r\n               </div>\r\n               <div>{props.profile.lookingForAJobDescription}</div>\r\n            </div>\r\n         ) : (\r\n            <div>\r\n               <b>Don't looking for a job</b>\r\n            </div>\r\n         )}\r\n         <Contacts contacts={props.profile.contacts} />\r\n      </div>\r\n   )\r\n}\r\nexport default ProfileInfo\r\n","import React from 'react'\r\nimport { Button, message, Upload } from 'antd'\r\nimport ImgCrop from 'antd-img-crop'\r\nimport { UploadOutlined } from '@ant-design/icons'\r\n\r\nconst UploadButton = (props) => {\r\n   const beforeUpload = (file) => {\r\n      const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\r\n      const isLt2M = file.size / 1024 / 1024 < 5\r\n      if (!isJpgOrPng) {\r\n         message.error('You can only upload JPG/PNG file!')\r\n      } else if (!isLt2M) {\r\n         message.error('Image must smaller than 5MB!')\r\n      } else {\r\n         props.savePhoto(file)\r\n         message.success('Image update')\r\n      }\r\n      return isJpgOrPng && isLt2M\r\n   }\r\n   const onPreview = async (file) => {\r\n      let src = file.url\r\n      if (!src) {\r\n         src = await new Promise((resolve) => {\r\n            const reader = new FileReader()\r\n            reader.readAsDataURL(file.originFileObj)\r\n            reader.onload = () => resolve(reader.result)\r\n         })\r\n      }\r\n      const image = new Image()\r\n      image.src = src\r\n      const imgWindow = window.open(src)\r\n      imgWindow?.document.write(image.outerHTML)\r\n   }\r\n   return (\r\n      <ImgCrop rotate>\r\n         <Upload showUploadList={false} beforeUpload={beforeUpload} onPreview={onPreview}>\r\n            <Button icon={<UploadOutlined />}>Upload</Button>\r\n         </Upload>\r\n      </ImgCrop>\r\n   )\r\n}\r\nexport default UploadButton\r\n","import React from 'react'\r\nimport Post from './Posts/Post'\r\nimport avatar from '../../../assets/userAvatar.png'\r\nimport ProfileStatus2 from './ProfileStatus2'\r\nimport AddNewPostForm from './AddPostForm'\r\nimport ProfileEditForm from './ProfileEditForm'\r\nimport ProfileInfo from './ProfileInfo'\r\nimport { Avatar, Col, Divider, Empty, Row, Space, Statistic } from 'antd'\r\nimport UploadButton from '../../../common/UploadButton'\r\nimport { SmileOutlined } from '@ant-design/icons'\r\nimport FollowButton from '../../../common/FollowButton'\r\nimport s from './Profile.module.css'\r\n\r\nconst Profile = (props) => {\r\n   const onSubmit = (profileInfo) => {\r\n      props.saveProfileInfo(profileInfo)\r\n   }\r\n   const addNewPost = (e) => {\r\n      e.preventDefault()\r\n      props.addPost(e.target.postMessage.value)\r\n   }\r\n   const deletePost = (postId) => {\r\n      props.deletePost(postId)\r\n   }\r\n   const increaseLikesCount = (postId) => {\r\n      props.increaseLikesCount(postId)\r\n   }\r\n   const decreaseLikesCount = (postId) => {\r\n      props.decreaseLikesCount(postId)\r\n   }\r\n\r\n   let myPosts = props.posts.map((post) => (\r\n      <Post\r\n         userAvatar={props.profile.photos.large || avatar}\r\n         userName={props.profile.fullName}\r\n         key={post.id}\r\n         post={post}\r\n         deletePost={deletePost}\r\n         decreaseLikesCount={decreaseLikesCount}\r\n         increaseLikesCount={increaseLikesCount}\r\n         allowChange={props.allowChange}\r\n      />\r\n   ))\r\n   return (\r\n      <main className={s.main}>\r\n         <Row>\r\n            <Col span={6}>\r\n               <Avatar size={150} icon={<img src={props.profile.photos.large || avatar} alt=\"main-img\" />} />\r\n            </Col>\r\n            <Col span={6}>\r\n               <Statistic title=\"Followers\" value={10} />\r\n            </Col>\r\n            <Col span={6}>\r\n               <Statistic title=\"Follows\" value={10} />\r\n            </Col>\r\n            <Col span={6}>\r\n               <Statistic title=\"Now\" prefix={<SmileOutlined />} value={'online'} />\r\n            </Col>\r\n         </Row>\r\n         {props.allowChange ? (\r\n            <UploadButton savePhoto={props.savePhoto} />\r\n         ) : (\r\n            <FollowButton userId={props.profile.userId} followed={props.profile.followed} />\r\n         )}\r\n\r\n         {props.allowChange && <ProfileEditForm onSubmit={onSubmit} profile={props.profile} />}\r\n         <ProfileInfo profile={props.profile} />\r\n         <ProfileStatus2\r\n            status={props.status}\r\n            updateUserStatus={props.updateUserStatus}\r\n            allowChange={props.allowChange}\r\n         />\r\n         <Divider style={{ color: 'white', borderColor: 'white' }} plain>\r\n            Posts\r\n         </Divider>\r\n         {props.allowChange && <AddNewPostForm onSubmit={addNewPost} allowChange={props.allowChange} />}\r\n         {myPosts.length ? (\r\n            <>\r\n               <Space wrap={true}>\r\n                  <div className={s.posts}>{myPosts}</div>\r\n               </Space>\r\n            </>\r\n         ) : (\r\n            <Empty />\r\n         )}\r\n      </main>\r\n   )\r\n}\r\n\r\nexport default Profile\r\n","export const getPosts = (state) => state.profilePage.posts\r\nexport const getNewPostMessage = (state) => state.profilePage.newPostMessage\r\nexport const getIsFetching = (state) => state.profilePage.isFetching\r\nexport const getStatus = (state) => state.profilePage.status\r\nexport const getProfile = (state) => state.profilePage.profile\r\nexport const getId = (state) => state.auth.id\r\n","import React, { useEffect } from 'react'\r\nimport {\r\n   addPost,\r\n   requestProfile,\r\n   getUserStatus,\r\n   updateUserStatus,\r\n   deletePost,\r\n   increaseLikesCount,\r\n   decreaseLikesCount,\r\n   savePhoto,\r\n   saveProfileInfo,\r\n} from '../../../Redux/profileReducer'\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../../../common/Spinner'\r\nimport { withAuthRedirection } from '../../../hoc/withAuthRedirection'\r\nimport { withRouter } from '../../../hoc/withRouter'\r\nimport { compose } from 'redux'\r\nimport {\r\n   getId,\r\n   getIsFetching,\r\n   getNewPostMessage,\r\n   getPosts,\r\n   getProfile,\r\n   getStatus,\r\n} from '../../../Redux/profileSelectors'\r\nimport { getIsAuth } from '../../../Redux/authSelectors'\r\n\r\nconst ProfileApiComponent = (props) => {\r\n   let userId = props.router.params.userId\r\n   let allowChange = false\r\n   const { requestProfile, getUserStatus } = props\r\n   if (!userId) {\r\n      userId = props.id\r\n      allowChange = true\r\n   }\r\n   useEffect(() => {\r\n      requestProfile(userId)\r\n      getUserStatus(userId)\r\n   }, [userId, requestProfile, getUserStatus])\r\n   return <>{props.isFetching ? <Spinner /> : <Profile {...props} allowChange={allowChange} />}</>\r\n}\r\n\r\nconst MapStateToProps = (state) => {\r\n   return {\r\n      posts: getPosts(state),\r\n      newPostMessage: getNewPostMessage(state),\r\n      isFetching: getIsFetching(state),\r\n      isAuth: getIsAuth(state),\r\n      status: getStatus(state),\r\n      profile: getProfile(state),\r\n      id: getId(state),\r\n   }\r\n}\r\n// const DispatchToProps = (dispatch) => {\r\n//    return {\r\n//       onPostChange: (text) => {\r\n//          dispatch(updateMessageActionCreator(text))\r\n//       },\r\n//       addPost: () => {\r\n//          dispatch(addPostActionCreator())\r\n//       },\r\n//       setState: (posts) => {\r\n//          dispatch(setStateAC(posts))\r\n//       },\r\n//    }\r\n// }\r\n\r\nexport default compose(\r\n   connect(MapStateToProps, {\r\n      addPost,\r\n      deletePost,\r\n      increaseLikesCount,\r\n      decreaseLikesCount,\r\n      requestProfile,\r\n      getUserStatus,\r\n      updateUserStatus,\r\n      savePhoto,\r\n      saveProfileInfo,\r\n   }),\r\n   withAuthRedirection,\r\n   withRouter\r\n)(ProfileApiComponent)\r\n","import { useLocation, useNavigate, useParams } from 'react-router-dom'\r\nexport const withRouter = (Component) => {\r\n   const ComponentWithRouter = (props) => {\r\n      let location = useLocation()\r\n      let navigate = useNavigate()\r\n      let params = useParams()\r\n      return <Component {...props} router={{ location, navigate, params }} />\r\n   }\r\n\r\n   return ComponentWithRouter\r\n}\r\n","import { connect } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { getIsAuth } from '../Redux/authSelectors'\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: getIsAuth(state),\r\n})\r\n\r\nexport const withAuthRedirection = (Component) => {\r\n   const RedirectComponent = (props) => {\r\n      if (!props.isAuth) return <Navigate replace to=\"/login\" />\r\n      return <Component {...props} />\r\n   }\r\n   const ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n   return ConnectedRedirectComponent\r\n}\r\n"],"names":["useValidation","value","validations","useState","isEmpty","setEmpty","minLengthError","setMinLengthError","emailError","setEmailError","error","setError","inputValid","setInputValid","useEffect","validation","length","String","toLowerCase","match","minLenght","initialValue","setValue","isDirty","setDirty","valid","onChange","e","target","onBlur","Meta","Card","Post","props","open","setOpen","items","key","label","title","description","onConfirm","deletePost","post","id","message","okText","cancelText","DeleteOutlined","wrap","justify","align","size","icon","src","userAvatar","alt","userName","allowChange","placement","trigger","menu","onOpenChange","flag","MoreOutlined","hoverable","style","width","cover","height","image","actions","onClick","liked","decreaseLikesCount","increaseLikesCount","likesCount","LikeOutlined","CommentOutlined","ShareAltOutlined","React","editMode","setEditMode","status","setStatus","autoFocus","updateUserStatus","currentTarget","type","defaultValue","onDoubleClick","postMessage","useInput","onSubmit","name","color","disabled","className","s","isModalOpen","setIsModalOpen","handleOk","profileInfo","profile","aboutMe","contacts","facebook","website","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","fullName","handleCancel","EditOutlined","closable","onOk","onCancel","footer","CloseOutlined","CheckOutlined","FacebookOutlined","ChromeOutlined","TwitterOutlined","InstagramOutlined","YoutubeOutlined","GithubOutlined","LinkedinOutlined","preventDefault","CaretDownOutlined","onPreview","file","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","Image","imgWindow","window","document","write","outerHTML","rotate","showUploadList","beforeUpload","isJpgOrPng","isLt2M","savePhoto","UploadOutlined","postId","myPosts","posts","map","photos","large","avatar","span","prefix","SmileOutlined","FollowButton","userId","followed","saveProfileInfo","borderColor","plain","addPost","getPosts","state","profilePage","getNewPostMessage","newPostMessage","getIsFetching","isFetching","getStatus","getProfile","getId","auth","compose","connect","isAuth","getIsAuth","requestProfile","getUserStatus","withAuthRedirection","Component","location","useLocation","navigate","useNavigate","params","useParams","router","Spinner","mapStateToProps","replace","to"],"sourceRoot":""}